{
    "type": "bundle",
    "id": "bundle--98066f1b-76b9-4314-8cd8-6f13fdce7e61",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--9413f3cd-b047-4047-a29e-8164fd301c30",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-03-13T00:39:28.152685Z",
            "modified": "2025-03-13T00:39:28.152685Z",
            "name": "CVE-2025-21849",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/gt: Use spin_lock_irqsave() in interruptible context\n\nspin_lock/unlock() functions used in interrupt contexts could\nresult in a deadlock, as seen in GitLab issue #13399,\nwhich occurs when interrupt comes in while holding a lock.\n\nTry to remedy the problem by saving irq state before spin lock\nacquisition.\n\nv2: add irqs' state save/restore calls to all locks/unlocks in\n signal_irq_work() execution (Maciej)\n\nv3: use with spin_lock_irqsave() in guc_lrc_desc_unpin() instead\n of other lock/unlock calls and add Fixes and Cc tags (Tvrtko);\n change title and commit message\n\n(cherry picked from commit c088387ddd6482b40f21ccf23db1125e8fa4af7e)",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-21849"
                }
            ]
        }
    ]
}