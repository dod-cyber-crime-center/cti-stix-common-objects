{
    "type": "bundle",
    "id": "bundle--7815034e-0503-4a8d-821b-1a791f084d36",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--7da83eb4-0ec7-41f0-8bf5-eb676b99b36a",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-21T00:43:09.092066Z",
            "modified": "2025-05-21T00:43:09.092066Z",
            "name": "CVE-2025-37908",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm, slab: clean up slab->obj_exts always\n\nWhen memory allocation profiling is disabled at runtime or due to an\nerror, shutdown_mem_profiling() is called: slab->obj_exts which\npreviously allocated remains.\nIt won't be cleared by unaccount_slab() because of\nmem_alloc_profiling_enabled() not true. It's incorrect, slab->obj_exts\nshould always be cleaned up in unaccount_slab() to avoid following error:\n\n[...]BUG: Bad page state in process...\n..\n[...]page dumped because: page still charged to cgroup\n\n[andriy.shevchenko@linux.intel.com: fold need_slab_obj_ext() into its only user]",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-37908"
                }
            ]
        }
    ]
}